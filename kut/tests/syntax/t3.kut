// Copyright 15-Feb-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

n = 7;
m1 = {"a": "a", b: "b"};

if (n == 7) {
  m1.a = "ok1";
} else {
  trace "error";
}
assert m1.a == "ok1";

if (n == 7) m1.a = "ok2";;

assert m1.a == "ok2";

if (n != 7) {
  trace "error";
}

fn = \-> {
  while () return 3+2;
};
assert fn() == 5;

c = [0];
while (c[0] < 3) c[0] += 1;
assert c[0] == 3;

c[0] = 0;
while (c[0] < 300) {
  c[0] += 1;
  if (c[0] == 3) break;
}
assert c[0] == 3;

c[0] = 0;
while (c[0] < 30) {
  c[0] += 1;
  if (c[0] < 10) continue;
  if (c[0] == 3) break;
}
assert c[0] == 30;

c[0] = 1;
for (e = [1, 2, 3]) {
  assert e == c[0];
  c[0] += 1;
}

c[0] = 1;
for (e = [1, 2, 3]) {
  if (e < 2) continue;
  assert e == c[0] + 1;
  c[0] += 1;
}

c[0] = 1;
for (e = [1, 2, 3]) {
  assert e == c[0];
  if (e == 1) break;
}

c[0] = 1;
for (e, i = [1, 2, 3]) {
  assert i == c[0] - 1;
  assert e == c[0];
  c[0] += 1;
}

c[0] = 1;
for (e, i = [1, 2, 3]) {
  if (e < 2) continue;
  assert i == c[0];
  assert e == c[0] + 1;
  c[0] += 1;
}

c[0] = 1;
for (e, i = [1, 2, 3]) {
  assert i == c[0] - 1;
  assert e == c[0];
  if (e == 1) break;
}

c[0] = 1;
for (e = 1:3+1) {
  assert e == c[0];
  c[0] += 1;
}

c[0] = 1;
for (e = 1:3+1) {
  assert e == c[0];
  c[0] += 1;
}

c[0] = 1;
for (e = 1:4) {
  if (e < 2) continue;
  assert e == c[0] + 1;
  c[0] += 1;
}

c[0] = 1;
for (e = 1:4) {
  assert e == c[0];
  if (e == 1) break;
}

sum = [0];
for (i = 1:4) sum[0] += i;
assert sum[0] == 6;

c[0] = 4;
for (e = 3+1:1) {
  assert e == c[0];
  c[0] -= 1;
}

c[0] = 1;
for (e = 4:1) {
  if (e > 2) continue;
  assert e == c[0] + 1;
  c[0] -= 1;
}

c[0] = 4;
for (e = 4:1) {
  assert e == c[0];
  if (e == 4) break;
}

sum[0] = 0;
for (i = 4:1) sum[0] += i;
assert sum[0] == 9;

sum[0] = 0;
v = 3;
switch (v) {
  1: sum[0] = 11;
  2: sum[0] = 12;
  3: sum[0] = 13;
  default: sum[0] = 22;
}
assert sum[0] == 13;

for (x = 1:2) {}

sys.println("t3 test OK");
