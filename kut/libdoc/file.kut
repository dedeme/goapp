// Copyright 12-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// File and filesystem management.

/// Open 'fpath' for appending.
/// \s -> <file>
aopen = \s -> {};

/// Returns 'true' if 'v' is a <file>.
/// \* -> b
checkType = \v -> {};

/// Changes working directory.
/// \s -> ()
cd = \dir -> {};

/// Closes 'f' and frees resources.
/// \<file> -> ()
close = \f -> {};

/// Copy a file.
///   source: Can be a regular file or a directory.
///   target: - If source is a directory, target must be the target parent
///             directory.
///           - If source is a regular file, target can be the target parent
///             directory or a regular file.
/// NOTE: Target will be overwritte if already exists.
/// \s, s -> ()
copy = \source, target -> {};

/// Deletes 'fpath'. If 'fpath' is a directory, 'del' deletes it and all its
/// subdirectories, although they are not empty.
/// If 'fpath' does not exists, 'del' do nothing.
/// \s -> ()
del = \s -> {};

/// Returns base names of files and directories of 'dir'.
/// \s -> [s...]
dir = \s -> {};

/// Returns 'true' if 'fpath' is a file or directory.
/// \s -> b
exists = \s -> {};

/// Returns home directory.
/// \-> s
home = \-> {};

/// Returns 'true' if 'fpath' is a directory.
/// \s -> b
isDirectory = \s -> {};

/// Creates the directory 'fpath' and its parents directory if is necessary.
/// \s -> ()
mkdir = \s -> {};

/// Read the complete file 'fpath'.
/// \s -> s
read = \fpath -> {};

/// Read 'buf' bytes of 'f'.
/// When 'f' is at end, returns a bytes with no element.
/// \<file -> <bytes>
readBin = \f -> {};

/// Returns an array with the next line of 'f'.
/// If there is no more elements, it returns an empty array.
/// Lines are read without carriage return.
/// \f -> ([s] | [])
readLine = \f -> {};

/// Changes (moves) 'oldPath' by 'newPath'
/// \s, s -> ()
rename = \oldPath, newPath -> {};

/// Open 'fpath' for reading.
/// \s -> <file>
ropen = \s -> {};

/// Returns the size of file 'fpath'.
/// \s -> i
size = \s -> {};

/// Returns the time of the last modification of file 'fpath'.
/// \s -> i
tm = \s -> {};

/// Returns a random name for a file in "dir" + "/" + 'fpath' + "xxxxxxxx".
/// The return is checked that does not match any existing file.
/// If 'dir' is an empty string, './' is used instead.
/// \s, s -> s
tmp = \dir, fpath -> {};

/// Returns working directory.
/// \-> s
wd = \-> {};

/// Open 'fpath' for writing.
/// \s -> <file>
wopen = \s -> {};

/// Creates, writes and closes 'fpath'.
/// \s, s -> ()
write = \fpath, text -> {};

/// Writes 'bs' in 'f'.
/// \<file>, <bytes> -> ()
writeBin = \f, bs -> {};

/// Writes 'text' in 'f'.
/// \<file>, s -> ()
writeText = \f, text -> {};
