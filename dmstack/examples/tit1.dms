// Copyright 10-Aug-2020 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

(
  [] it.from [] it.from it.+ it.to [] expect
  [1 2] it.from it.to [1 2] expect
  [1 2] it.from [] it.from it.+ it.to [1 2] expect
  [] it.from [3 4] it.from it.+ it.to [3 4] expect
  [1 2] it.from [3 4] it.from it.+ it.to [1 2 3 4] expect

  [[1, 2] it.from
   [3] it.from
   [] it.from
   [4, 5] it.from
  ] it.++ it.to [1, 2, 3, 4, 5] expect
  [[] it.from [] it.from] it.++ it.to [] expect

  [] it.from 0 it.drop it.to [] expect
  [] it.from 2 it.drop it.to [] expect
  [1] it.from 0 it.drop it.to [1] expect
  [1] it.from 2 it.drop it.to [] expect
  [1, 2, 3] it.from 0 it.drop it.to [1, 2, 3] expect
  [1, 2, 3] it.from 2 it.drop it.to [3] expect

  (1 <) : p01 =
  (3 <) : p02 =
  [] it.from (p01) it.dropf it.to [] expect
  [] it.from (p02) it.dropf it.to [] expect
  [1] it.from (p01) it.dropf it.to [1] expect
  [1] it.from (p02) it.dropf it.to [] expect
  [1, 2, 3] it.from (p01) it.dropf it.to [1, 2, 3] expect
  [1, 2, 3] it.from (p02) it.dropf it.to [3] expect

  (2 % 0 ==) : p10 =
  [] it.from (p10) it.filter it.to [] expect
  [1, 3] it.from (p10) it.filter it.to [] expect
  [0, 1, 2, 3, 4] it.from (p10) it.filter it.to [0, 2, 4] expect

  (2 *) : p20 =
  [] it.from (p20) it.map it.to [] expect
  [1, 3] it.from (p20) it.map it.to [2, 6] expect

  [] it.from 1 it.push it.to [1] expect
  ["a"] it.from 1 it.push it.to ["a", 1] expect
  [] it.from 1 it.push0 it.to [1] expect
  ["a"] it.from 1 it.push0 it.to [1, "a"] expect

  [] it.from 0 it.take it.to [] expect
  [] it.from 2 it.take it.to [] expect
  [1] it.from 0 it.take it.to [] expect
  [1] it.from 2 it.take it.to [1] expect
  [1, 2, 3] it.from 0 it.take it.to [] expect
  [1, 2, 3] it.from 2 it.take it.to [1, 2] expect

  (1 <) : p31 =
  (3 <) : p32 =
  [] it.from (p31) it.takef it.to [] expect
  [] it.from (p32) it.takef it.to [] expect
  [1] it.from (p31) it.takef it.to [] expect
  [1] it.from (p32) it.takef it.to [1] expect
  [1, 2, 3] it.from (p31) it.takef it.to [] expect
  [1, 2, 3] it.from (p32) it.takef it.to [1, 2] expect

  [] it.from [] it.from it.zip it.to [] expect
  [1, 2] it.from [] it.from it.zip it.to [] expect
  [] it.from [1, 2] it.from it.zip it.to [] expect
  [1, 2] it.from ["a"] it.from it.zip it.to [[1, "a"]] expect
  [1] it.from ["a", "b"] it.from it.zip it.to [[1, "a"]] expect
  [1, 2] it.from ["a", "b"] it.from it.zip it.to [[1, "a"], [2, "b"]] expect

  @
) run
