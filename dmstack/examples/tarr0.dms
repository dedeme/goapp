// Copyright 10-Jan-2021 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

arr.new : l0 =
"X" 3 arr.make : l3 =
l3 arr.size 3 expect
l0 arr.size 0 expect
l0 2 arr.push
l0 toString "[2]" expect
l0 1 arr.push0
l0 arr.empty ! assert
l0 toString "[1,2]" expect
l0 arr.peek 2 expect
l0 arr.peek0 1 expect
l0 arr.apop 2 expect
l0 arr.apop0 1 expect
l0 arr.size 0 expect
l0 arr.empty assert
l0 dup 1 arr.push 2 arr.push
l0 .0 1 expect
l0 .1 2 expect
l0 0 "a" arr.set
l0 .0 "a" expect
l0 0 (: e =; ">" e "<" ++) arr.up
l0 .0 ">a<" expect
l3 .0 "X" expect
l3 .1 "X" expect
l3 .2 "X" expect
l3 "Z" arr.fill
l3 .0 "Z" expect
l3 .1 "Z" expect
l3 .2 "Z" expect
l3 1 true arr.set
l3 .0 "Z" expect
l3 .1 assert
l3 .2 "Z" expect

arr.new : lb0 =
"X" 3 arr.make : lb3 =

lb0 0 "a" arr.insert; lb0 arr.size 1 expect; lb0 .0 "a" expect
lb3 1 "a" arr.insert; lb3 arr.size 4 expect
lb3 .0 "X" expect
lb3 .1 "a" expect
lb3 .2 "X" expect
lb3 .3 "X" expect
lb3 4 "b" arr.insert; lb3 arr.size 5 expect
lb3 .0 "X" expect
lb3 .1 "a" expect
lb3 .2 "X" expect
lb3 .3 "X" expect
lb3 .4 "b" expect

arr.new : li0 =
arr.new : lc0 =
"X" 3 arr.make : lc3 =
lc0 0 li0 arr.insertList; lc0 arr.size 0 expect
lc3 1 li0 arr.insertList; lc3 arr.size 3 expect
lc3 .0 "X" expect
lc3 .1 "X" expect
lc3 .2 "X" expect
lc3 3 li0 arr.insertList; lc3 arr.size 3 expect
lc3 .0 "X" expect
lc3 .1 "X" expect
lc3 .2 "X" expect

["a", "b", "c"] : li3 =
arr.new : ld0 =
"X" 3 arr.make : ld3 =
ld0 0 li3 arr.insertList; ld0 arr.size 3 expect
ld0 .0 "a" expect
ld0 .1 "b" expect
ld0 .2 "c" expect
ld3 1 li3 arr.insertList; ld3 arr.size 6 expect
ld3 .0 "X" expect
ld3 .1 "a" expect
ld3 .2 "b" expect
ld3 .3 "c" expect
ld3 .4 "X" expect
ld3 .5 "X" expect
ld3 6 li3 arr.insertList; ld3 arr.size 9 expect
ld3 .0 "X" expect
ld3 .1 "a" expect
ld3 .2 "b" expect
ld3 .3 "c" expect
ld3 .4 "X" expect
ld3 .5 "X" expect
ld3 .6 "a" expect
ld3 .7 "b" expect
ld3 .8 "c" expect

ld3 1 4 arr.removeRange; ld3 arr.size 6 expect
ld3 .0 "X" expect
ld3 .1 "X" expect
ld3 .2 "X" expect
ld3 .3 "a" expect
ld3 .4 "b" expect
ld3 .5 "c" expect

ld3 5 arr.remove; ld3 2 arr.remove; ld3 0 arr.remove
ld3 arr.size 3 expect
ld3 .0 "X" expect
ld3 .1 "a" expect
ld3 .2 "b" expect

ld3 arr.reverse
ld3 .0 "b" expect
ld3 .1 "a" expect
ld3 .2 "X" expect

ld3 (<) arr.sort; ld3 ["X","a","b"] expect
ld3 (>) arr.sort; ld3 ["b","a","X"] expect

[1, 4, 2] : lst =
lst (<) arr.sort; lst [1, 2, 4] expect
lst (>) arr.sort; lst [4, 2, 1] expect

// ld3 arr.shuffle; ld3 puts

ld3 arr.clear; ld3 arr.size 0 expect

@
