// Copyright 11-Jan-2021 ºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

(
  (blob.to toStr) : blobStr =

  0 blob.new blob.to [] expect
  4 blob.new blob.to [0,0,0,0] expect
  4 blob.new 258 blob.fill blob.to [2, 2, 2, 2] expect

  [] blob.from blob.to [] expect
  [1, 2, 3] blob.from blob.to [1, 2, 3] expect

  "añd" blob.fromStr blob.toStr "añd" expect

  [1, 2] blob.from 1 blob.get 2 expect
  [1, 2, 3] blob.from : b =
  b 1 33 blob.set b blob.to [1, 33, 3] expect
  b 1 (8 +) blob.up b blob.to [1, 41, 3] expect

  [] blob.from blob.size 0 expect
  b blob.size 3 expect

  [] blob.from [] blob.from blob.eq assert
  b [] blob.from blob.neq assert
  [] blob.from b blob.neq assert
  [1] blob.from b blob.neq assert
  [1, 41, 3] blob.from b blob.eq assert

  [] blob.from [] blob.from blob.neq ! assert
  b [] blob.from blob.eq ! assert
  [] blob.from b blob.eq ! assert
  [1] blob.from b blob.eq ! assert
  [1, 41, 3] blob.from b blob.neq ! assert

  [] blob.from : b0 =
  b0 0 0 blob.sub blob.to [] expect
  b0 0 blob.left blob.to [] expect
  b0 0 blob.right blob.to [] expect

  b 0 3 blob.sub b blob.eq assert
  b 0 2 blob.sub blob.to [1, 41] expect
  b 0 -1 blob.sub blob.to [1, 41] expect
  b 1 2 blob.sub blob.to [41] expect
  b -2 -1 blob.sub blob.to [41] expect

  b 0 blob.left blob.to [] expect
  b 1 blob.left blob.to [1] expect
  b -1 blob.left blob.to [1, 41] expect
  b 3 blob.left blob.to [1, 41, 3] expect

  b 0 blob.right blob.to [1, 41, 3] expect
  b 1 blob.right blob.to [41, 3] expect
  b -1 blob.right blob.to [3] expect
  b 3 blob.right blob.to [] expect

  b0 b0 blob.cat b0 blob.eq assert
  b0 b blob.cat b blob.eq assert
  b b0 blob.cat b blob.eq assert
  b b blob.cat blob.to [1, 41, 3, 1, 41, 3] expect

  [1, 1, 0, 0, 23] blob.from : b1 =
  [1, 0, 1, 0] blob.from : b2 =
  b1 b2 blob.add blob.to [2, 1, 1, 0] expect
  b1 b2 blob.subs blob.to [0, 1, 255, 0] expect
  b1 b2 blob.and blob.to [1, 0, 0, 0] expect
  b1 b2 blob.or blob.to [1, 1, 1, 0] expect
  b1 b2 blob.xor blob.to [0, 1, 1, 0] expect

  @
) run
